name: PR for foo

on:
  pull_request:
    branches:
      - master
    paths:
      - 'src/foo/**/*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Ruby 2.5.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.5.7'

    - name: Set up Node 12.13.0
      uses: actions/setup-node@v1
      with:
        node-version: '12.13.0'

    - name: apt-get install -y
      run: |
        sudo apt-get install -y sqlite3 libsqlite3-dev

    - name: Ruby gem cache
      uses: actions/cache@v2
      with:
        path: src/foo/vendor/bundle
        key: ${{ runner.os }}-src/foo/bundle-${{ hashFiles('src/foo/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-src/foo/bundle-

    - name: Install gems
      run: |
        pushd src/foo
        bundle config deployment true
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        pwd

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-src/foo/yarn-${{ hashFiles('src/foo/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-src/foo/yarn-

    - name: Install yarns
      run: |
        pushd src/foo
        yarn install

    - uses: actions/setup-python@v1

    - name: git debug
      run: |
        URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}/files"
        curl -s -X GET -G $URL -o /tmp/files.json

        pip install pre-commit
        scripts/pre_commit_for_github.py ^src/foo
